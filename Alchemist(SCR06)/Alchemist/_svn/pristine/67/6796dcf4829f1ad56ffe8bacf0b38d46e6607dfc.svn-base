using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Alchemist
{
    public class SystemConstants
    {
        #region  /* 共通定数 */
        public const string MUTEX_NAME = "Global\\ALCHEMIST";   /* MUTEXの名前 */

        public const int BORATE_4800 = 1;	            /* ComConfigureで使用する定数。ポーレート4800bpsを意味する。 */
        public const int BORATE_9600 = 2;	            /* ComConfigureで使用する定数。ポーレート9600bpsを意味する。 */
        public const int BORATE_14400 = 3;	            /* ComConfigureで使用する定数。ポーレート14400bpsを意味する。 */
        public const int BORATE_19200 = 4;	            /* ComConfigureで使用する定数。ポーレート19200bpsを意味する。 */
        public const int BORATE_38400 = 5;	            /* ComConfigureで使用する定数。ポーレート38400bpsを意味する。 */
        public const int BORATE_57600 = 6;	            /* ComConfigureで使用する定数。ポーレート57600bpsを意味する。 */
        public const int BORATE_115200 = 7;	            /* ComConfigureで使用する定数。ポーレート115200bpsを意味する。 */
        public const int DATABIT_7 = 1;	                /* ComConfigureで使用する定数。データビット 7を意味する */
        public const int DATABIT_8 = 2;	                /* ComConfigureで使用する定数。データビット 8を意味する */
        public const int EVENT_CONNECT = 1;	            /* ConnectStatusChangeのEventCodeの定数。通信開始を意味する */
        public const int EVENT_DISCONNECT = 2;	        /* ConnectStatusChangeのEventCodeの定数。通信切断を意味する */
        public const int FLOW_NONE = 1;	                /* ComConfigureで使用する定数。フロー制御 無手順を意味する */
        public const int FLOW_HARD = 2;	                /* ComConfigureで使用する定数。フロー制御 ハードウェアを意味する */
        public const int FLOW_XONXOFF = 3;	            /* ComConfigureで使用する定数。フロー制御 XON/XOFFを意味する */
        public const int PARITY_NONE = 1;	            /* ComConfigureで使用する定数。パリティビット無しを意味する */
        public const int PARITY_ODD = 2;	            /* ComConfigureで使用する定数。パリティビット奇数を意味する */
        public const int PARITY_EVEN = 3;	            /* ComConfigureで使用する定数。パリティビット偶数を意味する */
        public const int STOPBIT_1 = 1;	                /* ComConfigureで使用する定数。ストップビット1を意味する */
        public const int STOPBIT_2 = 2;	                /* ComConfigureで使用する定数。ストップビット1を意味する */
        public const int BTN_PUSH = 2;	                /* 操作ボタンが押された事を意味する */
        public const int BTN_ON = 1;	                /* 操作ボタンがONを意味する */
        public const int BTN_OFF = 0;	                /* 操作ボタンがOFFを意味する */
        public const int ERR_MSG_INFORMATION = 5;	    /* エラーメッセージのうち、情報を意味する */
        public const int ERR_MSG_ERROR = 6;     	    /* エラーメッセージのうち、エラーを意味する */
        public const int FORMAT_DONE = 1;	            /* 機械が設定済を意味する値 */
        public const int FORMAT_NEED = 2;	            /* 機械が未設定を意味する値 */
        public const int MACHINE_CONNECT = 1;	        /* 機械と通信状態を意味する */
        public const int MACHINE_DISCONNECT = 2;        /* 機械と切断状態を意味する */
        public const int TYPE_WORKBTN = 3;	            /* BankData Typeの三次元配列のボタンを意味する値 */
        public const int TYPE_WORKDATA = 4;             /* BankData Typeの三次元配列の加工値を意味する値 */
        public const int TYPE_WORKCOMMENT = 5;	        /* BankData Typeの三次元配列のコメントを意味する値 */
        public const int WORKGROUP_ROOT = 0;	        /* GroupIndexのルートを意味する */
        public const int WORKMODE_BANK = 0;	            /* バンクモードを意味する値 */
        public const int ERROR_MSG = 1;         	    /* エラーメッセージを意味する */
        public const int SYSTEM_MSG = 2;	            /* システムメッセージを意味する */
		public const int WORK_MSG = 3;					/* 加工値メッセージを意味する */
        public const int CORRECT_MSG = 4;	            /* 補正値メッセージを意味する */
        public const int TIMMING_MSG = 5;	            /* タイミングメッセージを意味する */
        public const int WORKID_TYPE_WORKDATA = 1;      /* typeが加工値であること意味する */
        public const int WORKID_TYPE_CORRECTDATA = 2;   /* typeが補正値であること意味する */
        public const int WORKID_TYPE_TIMINGDATA = 3;    /* typeがタイミングであること意味する */
        public const bool BTN_ONOFF_REVERSE = true;     /* ボタンのON OFFが反対 */
        public const int BANKITEM_TYPE_WIRENAME = 0;    /* BANK属性のタイプが電線名を意味する */
        public const int BANKITEM_TYPE_WIRELENGTH = 1;  /* BANK属性のタイプを切断長を意味する */
        public const int BANKITEM_TYPE_STRIP1 = 2;      /* BANK属性のタイプをストリップ１を意味する */
        public const int BANKITEM_TYPE_STRIP2 = 3;      /* BANK属性のタイプをストリップ２意味する */
        public const bool TACHPANEL_OFF = false;        /* タッチパネル使用無を意味する */
        public const bool TACHPANEL_ON = true;          /* タッチパネル使用有を意味する */
        public const int BANK_MAX = 99;	                /* バンク数の限度値 */
        
        #endregion /* 共通定数 */

        #region /* 加工値 WORKID */
        public const int WIRE_LENGTH1 = 0x0101;
        public const int WIRE_TOP_LENGTH1 = 0x0102;
		public const int STRIP_LENGTH1 = 0x0201;
		public const int STRIP_HOGUSI1 = 0x0202;
		public const int STRIP_LENGTH2 = 0x0301;
		public const int STRIP_HOGUSI2 = 0x0302;
		public const int TOTAL_COUNTER1 = 0x0801;
		public const int LOT_COUNTER1 = 0x0802;
		public const int QTY_COUNTER1 = 0x0803;
		public const int LOT_SET_COUNTER1 = 0x0806;
		public const int QTY_SET_COUNTER1 = 0x0807;
		public const int MACHINE_TACT1 = 0x0808;
        public const int D_LOT_SET_COUNTER = 0x0809;
        public const int D_QTY_SET_COUNTER = 0x080A;
        public const int LOT_INTERVAL1 = 0x0901;
        public const int AUTO_CYCLE_FACTOR1 = 0x0902;
        public const int JOG_CYCLE_FACTOR1 = 0x0903;
        public const int SET_TACT_TIME = 0x0904;
        public const int FEED_SPEED1 = 0x0A01;
		public const int FEED_ACCEL1 = 0x0A02;
		public const int WIRE_LENGTH_CORRECT1 = 0x0A03;
		public const int FEED_SPEED2 = 0x0A04;
		public const int FEED_ACCEL2 = 0x0A05;
		public const int WIRE_LENGTH_CORRECT2 = 0x0A06;
		public const int FEED_SPEED3 = 0x0A07;
		public const int FEED_ACCEL3 = 0x0A08;
		public const int WIRE_LENGTH_CORRECT3 = 0x0A09;
		public const int FEED_SPEED_THRES1 = 0x0A0A;
		public const int FEED_SPEED_THRES2 = 0x0A0B;
        #endregion /* 加工値 WORKID */

        #region /* ボタンWORKID */
        public const int NORMAL_BTN = 0x0101;                   /* NORMAL */
        public const int EJECT_BTN = 0x0102;                    /* EJECT */
        public const int TEST_BTN = 0x0103;                     /* TEST */
        public const int SAMPLE_BTN = 0x0104;                   /* SAMPLE */
        public const int FREE_BTN = 0x0105;                     /* FREE */
        public const int JOG_BTN = 0x0201;                      /* JOG */
        public const int CYCLE_BTN = 0x0202;                    /* CYCLE */
        public const int AUTO_BTN = 0x0203;                     /* AUTO */
        public const int STRIP1_BTN = 0x0301;                   /* ストリップ1 */
        public const int STRIP2_BTN = 0x0401;                   /* ストリップ2 */

        public const int LOT_INTERVAL1_BTN = 0x060A;            /* 自動復帰 */
        public const int FEED1_BTN = 0x0701;                    /* フィード */
        public const int PERMIT_COUNTUP_BTN = 0x0702;           /* カウントアップ許可 */
        public const int WIRE_DISENTANGLE_BTN = 0x0703;         /* 電線ほぐしロック */
        public const int CUT_WIRETOP_BTN = 0x0704;              /* 先端カットロック */
        public const int MACHINE_START1_BTN = 0x0801;           /* スタート1 */
        public const int MACHINE_STOP_BTN = 0x0803;             /* ストップ */
        public const int MACHINE_RESET_BTN = 0x0804;            /* リセット */
        public const int TOTAL_COUNTER_RESET1_BTN = 0x0901;     /* トータルカウンタリセット */
        public const int LOT_COUNTER_RESET1_BTN = 0x0902;       /* LOTカウンタリセット */
        public const int QTY_COUNTER_RESET1_BTN = 0x0903;       /* QTYカウンタリセット */
        public const int COUNT_UP_BTN = 0x0906;                 /* カウントアップ */
        public const int COUNT_DOWN_BTN = 0x0907;               /* カウントダウン */
        public const int STRIP1_SENSOR_LOCK = 0x0A01;           /* ストリップミス1ロック */
        public const int ALARM_WIRELENGTH = 0x0B01;             /* 切断長設定異常 */
        public const int WIRE_CHANGE = 0x0B02;                  /* 電線照合中インターロック */
        #endregion /* ボタンWORKID */

        #region /* グループ定数 */
        public const int WORK_GROUP_WIRE1 = 1;
		public const int WORK_GROUP_STRIP1 = 2;
		public const int WORK_GROUP_STRIP2 = 3;
		public const int WORK_GROUP_COUNTER1 = 8;
		public const int WORK_GROUP_SPEED1 = 9;
		public const int WORK_GROUP_SPEED1_HIDE = 10;
		public const int BTN_GROUP_ACTION1 = 1;
		public const int BTN_GROUP_CYCLEMODE1 = 2;
		public const int BTN_GROUP_WORKMODE1 = 3;
		public const int BTN_GROUP_WORKMODE2 = 4;
		public const int BTN_GROUP_WORKMODE3 = 5;
		public const int BTN_GROUP_WORKMODE4 = 6;
		public const int BTN_GROUP_SETUPOPERATION1 = 7;
		public const int BTN_GROUP_OPERATE1 = 8;
		public const int BTN_GROUP_COUNTER1 = 9;
		public const int BTN_GROUP_SENSOR = 10;
		public const int CORR_GROUP_BASEMACHINE1 = 1;
        public const int CORR_GROUP_DISENTANGLE1 = 2;
        public const int CORR_GROUP_CUT1 = 3;
        public const int CORR_GROUP_PULL1 = 4;
        public const int TIMM_GROUP_FEEDCUT1 = 1;
        public const int TIMM_GROUP_PULL1 = 2;
        public const int TIMM_GROUP_STRIP1 = 3;
        public const int TIMM_GROUP_DISENTANGLE1 = 4;
        public const int TIMM_GROUP_TRIMMING1 = 5;
        public const int TIMM_GROUP_DISCHARGE1 = 6;
        #endregion /* グループ定数 */

        #region /* 戻り値 */
        public const int MCPF_SUCCESS = 0x0100;	                    /* 処理が正常に行われた場合の返り値 (MachineConnector Public Function) */
        public const int ERR_ADDRESS_RANGE = 0x0101;	            /* アドレス範囲外 */
        public const int ERR_MEMORY_RANGE = 0x0102; 	            /* メモリ値範囲外 */
        public const int ERR_TRANSFAR_RANGE = 0x0103;	            /* 送信数範囲外 */
        public const int ERR_PORTOPEN = 0x0104;	                    /* COMポートオープンエラー */
        public const int ERR_OPENTEST = 0x0105;	                    /* テスト通信エラー */
        public const int ERR_TIMEOUTRANGE = 0x0106;	                /* タイムアウト範囲外 */
        public const int ERR_POLLINGRANGE = 0x0107;	                /* ポーリング間隔範囲外 */
        public const int ERR_ILLEGALSTATUS = 0x0108;	            /* 不正状態 */
        public const int DCPF_SUCCESS = 0x0200;	                    /* 処理が正常に行われた場合の返り値 (DataConroller Public Function) */
        public const int ERR_NO_WORK_ID = 0x0201;	                /* 加工値ID無し */
        public const int ERR_WORK_RANGE = 0x0202;	                /* 加工値範囲外 */
        //        public const int ERR_ILLEGALSTATUS = 0x0203;	    /* 不正状態 */
        public const int ERR_BANK_PARTS_BREKE = 0x0204;	            /* 欠損バンクデータ */
        public const int ERR_BANK_PARTS_RANGE = 0x0205;	            /* バンクデータ値範囲外 */
        public const int ERR_WORKID_RANGE = 0x0206;	                /* WorkType, WorkID範囲外 */
        public const int BSPF_SUCCESS = 0x0300;	                    /* 処理が正常に行われた場合の返り値 (BankDataStorage Public Function) */
        public const int ERR_NO_BANK_DATA = 0x0301;	                /* バンクデータが無い場合の返り値 */
        public const int ERR_BANKNO_RANGE = 0x0302;                 /* バンクナンバー範囲外 */
        public const int ERR_UNINITIALIZED = 0x0303;                /* BankDataStorageが初期化されていない */
        public const int ERR_BANK_FILE_ERROR = 0x304;               /* BANKファイルが書き込めない */
        public const int ERR_CORRECT_FILE_ERROR = 0x305;            /* BANKファイルが書き込めない */
        public const int ERR_MEMALLOC_FILE_ERROR = 0x306;           /* BANKファイルが書き込めない */
        public const int ERR_SYNC_CANCELLED = 0x401;                /* 同期中にキャンセルされた */
        public const int ERR_SYNC_TIMEOUT = 0x402;                  /* 同期中にタイムアウト */
        public const int ERR_MACHINE_RUN_CANCELLED = 0x403;         /* 運転中に操作されキャンセルされた */
        public const int SQL_SUCCESS = 0x500;                       /* SQLServer処理が正常に行われた場合の返り値 */
        public const int ERR_SQL_CONNECT = 0x501;                   /* SQLServerへの接続が失敗 */
        public const int ERR_OPERATOR_NAME = 0x502;                 /* 作業者名の取得に失敗 */
        public const int ERR_TEMP_OPERATOR_NOBODY = 0x503;          /* 作業中の作業者がいない */
        public const int ERR_TEMP_OPERATOR_TODAY = 0x504;           /* 作業中の作業者が当日の作業でない */
        public const int ERR_TEMP_OPERATOR_DELETE = 0x505;          /* 作業中の作業者の削除に失敗 */
        public const int ERR_TEMP_OPERATOR_ADD = 0x506;             /* 作業中の作業者の登録に失敗 */
        public const int ERR_NO_WIRE_INFO = 0x507;                  /* 電線情報が登録されていない */
        public const int ERR_NO_WORKDATA = 0x508;                   /* 作業情報に連番が登録されていない */
        public const int ERR_RESULT_WORKDATA_INSERT = 0x509;        /* 作業実績の登録に失敗 */
        public const int ERR_NO_INTERRUPT_RESULT_WORKDATA = 0x50A;  /* 作業実績に中断された情報がない */
        public const int GET_INTERRUPT_RESULT_WORKDATA = 0x50B;     /* 作業実績に中断された情報を取得した */
        public const int ERR_NO_START_RESULT_WORKDATA = 0x50C;      /* 作業実績に開始された情報がない */
        public const int ERR_RESULT_WORKDATA_UPDATE = 0x50D;        /* 作業実績の更新に失敗 */
        public const int ERR_NO_COMPLETE_RESULT_WORKDATA = 0x50E;   /* 作業実績に完了した情報がない */
        public const int ERR_NO_LAST_WORKDATA = 0x50F;              /* 前回の作業情報がない */
        public const int ERR_LAST_WORKDATA_UPDATE = 0x510;          /* 前回の作業情報の登録に失敗 */
        public const int ERR_LAST_WORKDATA_DELETE = 0x511;          /* 前回の作業情報の削除に失敗 */
        public const int ERR_NO_GUIDE = 0x512;                      /* ガイド情報が登録されていない */
        public const int ERR_NO_BLADE = 0x513;                      /* ブレード情報が登録されていない */
        public const int ERR_QUALITY_RECORD_UPDATE = 0x514;         /* 品質記録の登録に失敗 */
        public const int ERR_NO_QUALITY_RECORD = 0x515;             /* 品質記録に連番が登録されていない */
        public const int ERR_MASTER_UPDATE = 0x516;                 /* マスターデータの更新に失敗 */
        public const int ERR_MASTER_DELETE = 0x517;                 /* マスターデータの削除に失敗 */
        public const int ERR_NO_SECTION = 0x518;                    /* 部署コードに登録されていない */
        #endregion /* 戻り値 */

        #region /* エラーコード定数 */
        public const int ERR_MSG000 = 0x0000;
        public const int ERR_MSG001 = 0x0001;
        public const int ERR_MSG002 = 0x0002;
        public const int ERR_MSG003 = 0x0003;
        public const int ERR_MSG004 = 0x0004;
        public const int ERR_MSG005 = 0x0005;
        public const int ERR_MSG006 = 0x0006;
        public const int ERR_MSG007 = 0x0007;
        public const int ERR_MSG008 = 0x0008;
        public const int ERR_MSG009 = 0x0009;
        public const int ERR_MSG010 = 0x000A;
        public const int ERR_MSG011 = 0x000B;
        public const int ERR_MSG012 = 0x000C;
        public const int ERR_MSG013 = 0x000D;
        public const int ERR_MSG014 = 0x000E;
        public const int ERR_MSG015 = 0x000F;
        public const int ERR_MSG016 = 0x0010;
        public const int ERR_MSG017 = 0x0011;
        public const int ERR_MSG018 = 0x0012;
        public const int ERR_MSG019 = 0x0013;
        public const int ERR_MSG020 = 0x0014;
        public const int ERR_MSG021 = 0x0015;
        public const int ERR_MSG022 = 0x0016;
        public const int ERR_MSG023 = 0x0017;
        public const int ERR_MSG024 = 0x0018;
        public const int ERR_MSG025 = 0x0019;
        public const int ERR_MSG026 = 0x001A;
        public const int ERR_MSG027 = 0x001B;
        public const int ERR_MSG028 = 0x001C;
        public const int ERR_MSG029 = 0x001D;
        public const int ERR_MSG030 = 0x001E;
        public const int ERR_MSG031 = 0x001F;
        public const int ERR_MSG032 = 0x0020;
        public const int ERR_MSG033 = 0x0021;
        public const int ERR_MSG034 = 0x0022;
        public const int ERR_MSG035 = 0x0023;
        public const int ERR_MSG036 = 0x0024;
        public const int ERR_MSG037 = 0x0025;
        public const int ERR_MSG038 = 0x0026;
        public const int ERR_MSG039 = 0x0027;
        public const int ERR_MSG040 = 0x0028;
        public const int ERR_MSG041 = 0x0029;
        public const int ERR_MSG042 = 0x002A;
        public const int ERR_MSG043 = 0x002B;
        public const int ERR_MSG044 = 0x002C;
        public const int ERR_MSG045 = 0x002D;
        public const int ERR_MSG046 = 0x002E;
        public const int ERR_MSG047 = 0x002F;
        public const int ERR_MSG048 = 0x0030;
        public const int ERR_MSG049 = 0x0031;
        public const int ERR_MSG050 = 0x0032;
        public const int ERR_MSG051 = 0x0033;
        public const int ERR_MSG052 = 0x0034;
        public const int ERR_MSG053 = 0x0035;
        public const int ERR_MSG054 = 0x0036;
        public const int ERR_MSG055 = 0x0037;
        public const int ERR_MSG056 = 0x0038;
        public const int ERR_MSG057 = 0x0039;
        public const int ERR_MSG058 = 0x003A;
        public const int ERR_MSG059 = 0x003B;
        public const int ERR_MSG060 = 0x003C;
        public const int ERR_MSG061 = 0x003D;
        public const int ERR_MSG062 = 0x003E;
        public const int ERR_MSG063 = 0x003F;
        public const int ERR_MSG064 = 0x0040;
        public const int ERR_MSG065 = 0x0041;
        public const int ERR_MSG066 = 0x0042;
        public const int ERR_MSG067 = 0x0043;
        public const int ERR_MSG068 = 0x0044;
        public const int ERR_MSG069 = 0x0045;
        public const int ERR_MSG070 = 0x0046;
        public const int ERR_MSG071 = 0x0047;
        public const int ERR_MSG072 = 0x0048;
        public const int ERR_MSG073 = 0x0049;
        public const int ERR_MSG074 = 0x004A;
        public const int ERR_MSG075 = 0x004B;
        public const int ERR_MSG076 = 0x004C;
        public const int ERR_MSG077 = 0x004D;
        public const int ERR_MSG078 = 0x004E;
        public const int ERR_MSG079 = 0x004F;
        public const int ERR_MSG080 = 0x0050;
        public const int ERR_MSG081 = 0x0051;
        public const int ERR_MSG082 = 0x0052;
        public const int ERR_MSG083 = 0x0053;
        public const int ERR_MSG084 = 0x0054;
        public const int ERR_MSG085 = 0x0055;
        public const int ERR_MSG086 = 0x0056;
        public const int ERR_MSG087 = 0x0057;
        public const int ERR_MSG088 = 0x0058;
        public const int ERR_MSG089 = 0x0059;
        public const int ERR_MSG090 = 0x005A;
        public const int ERR_MSG091 = 0x005B;
        public const int ERR_MSG092 = 0x005C;
        public const int ERR_MSG093 = 0x005D;
        public const int ERR_MSG094 = 0x005E;
        public const int ERR_MSG095 = 0x005F;
        public const int ERR_MSG096 = 0x0060;
        public const int ERR_MSG097 = 0x0061;
        public const int ERR_MSG098 = 0x0062;
        public const int ERR_MSG099 = 0x0063;
        public const int ERR_MSG100 = 0x0064;
        public const int ERR_MSG101 = 0x0065;
        public const int ERR_MSG102 = 0x0066;
        public const int ERR_MSG103 = 0x0067;
        public const int ERR_MSG104 = 0x0068;
        public const int ERR_MSG105 = 0x0069;
        public const int ERR_MSG106 = 0x006A;
        public const int ERR_MSG107 = 0x006B;
        public const int ERR_MSG108 = 0x006C;
        public const int ERR_MSG109 = 0x006D;
        public const int ERR_MSG110 = 0x006E;
        public const int ERR_MSG111 = 0x006F;
        public const int ERR_MSG112 = 0x0070;
        public const int ERR_MSG113 = 0x0071;
        public const int ERR_MSG114 = 0x0072;
        public const int ERR_MSG115 = 0x0073;
        public const int ERR_MSG116 = 0x0074;
        public const int ERR_MSG117 = 0x0075;
        public const int ERR_MSG118 = 0x0076;
        public const int ERR_MSG119 = 0x0077;
        public const int ERR_MSG120 = 0x0078;
        public const int ERR_MSG121 = 0x0079;
        public const int ERR_MSG122 = 0x007A;
        public const int ERR_MSG123 = 0x007B;
        public const int ERR_MSG124 = 0x007C;
        public const int ERR_MSG125 = 0x007D;
        public const int ERR_MSG126 = 0x007E;
        public const int ERR_MSG127 = 0x007F;
        public const int ERR_MSG500 = 0x0100;
        public const int ERR_MSG501 = 0x0101;
        public const int ERR_MSG502 = 0x0102;
        public const int ERR_MSG503 = 0x0103;
        public const int ERR_MSG504 = 0x0104;
        public const int ERR_MSG505 = 0x0105;
        public const int ERR_MSG506 = 0x0106;
        public const int ERR_MSG507 = 0x0107;
        public const int ERR_MSG508 = 0x0108;
        public const int ERR_MSG509 = 0x0109;
        public const int ERR_MSG510 = 0x010A;
        public const int ERR_MSG511 = 0x010B;
        public const int ERR_MSG512 = 0x010C;
        public const int ERR_MSG513 = 0x010D;
        public const int ERR_MSG514 = 0x010E;
        public const int ERR_MSG515 = 0x010F;
        public const int ERR_MSG516 = 0x0110;
        public const int ERR_MSG517 = 0x0111;
        public const int ERR_MSG518 = 0x0112;
        public const int ERR_MSG519 = 0x0113;

		public const int SYSTEM_MSG001 = 1;
		public const int SYSTEM_MSG002 = 2;
		public const int SYSTEM_MSG003 = 3;
		public const int SYSTEM_MSG004 = 4;
		public const int SYSTEM_MSG005 = 5;
		public const int SYSTEM_MSG006 = 6;
		public const int SYSTEM_MSG007 = 7;
		public const int SYSTEM_MSG008 = 8;
		public const int SYSTEM_MSG009 = 9;
		public const int SYSTEM_MSG010 = 10;
		public const int SYSTEM_MSG011 = 11;
		public const int SYSTEM_MSG012 = 12;
        public const int SYSTEM_MSG013 = 13;
        public const int SYSTEM_MSG014 = 14;
        public const int SYSTEM_MSG015 = 15;
        public const int SYSTEM_MSG016 = 16;
		public const int SYSTEM_MSG017 = 17;
		public const int SYSTEM_MSG018 = 18;
		public const int SYSTEM_MSG019 = 19;
		public const int SYSTEM_MSG020 = 20;
        public const int SYSTEM_MSG021 = 21;
        public const int SYSTEM_MSG022 = 22;
        public const int SYSTEM_MSG023 = 23;
        public const int SYSTEM_MSG024 = 24;
        public const int SYSTEM_MSG025 = 25;
        public const int SYSTEM_MSG026 = 26;
        public const int SYSTEM_MSG027 = 27;
        public const int SYSTEM_MSG028 = 28;
        public const int SYSTEM_MSG029 = 29;
        public const int SYSTEM_MSG030 = 30;
        public const int SYSTEM_MSG031 = 31;
        public const int SYSTEM_MSG032 = 32;
        public const int SYSTEM_MSG033 = 33;
        public const int SYSTEM_MSG034 = 34;
        public const int SYSTEM_MSG035 = 35;
        public const int SYSTEM_MSG036 = 36;
        public const int SYSTEM_MSG037 = 37;
        public const int SYSTEM_MSG038 = 38;
        public const int SYSTEM_MSG039 = 39;
        public const int SYSTEM_MSG040 = 40;
        public const int SYSTEM_MSG041 = 41;
        public const int SYSTEM_MSG042 = 42;
        public const int SYSTEM_MSG043 = 43;
        public const int SYSTEM_MSG044 = 44;
        public const int SYSTEM_MSG045 = 45;
        public const int SYSTEM_MSG046 = 46;
        public const int SYSTEM_MSG047 = 47;
        public const int SYSTEM_MSG048 = 48;
        public const int SYSTEM_MSG049 = 49;
        public const int SYSTEM_MSG050 = 50;
        public const int SYSTEM_MSG051 = 51;
        public const int SYSTEM_MSG052 = 52;
        public const int SYSTEM_MSG053 = 53;
        public const int SYSTEM_MSG054 = 54;
        public const int SYSTEM_MSG055 = 55;
        public const int SYSTEM_MSG056 = 56;
        public const int SYSTEM_MSG057 = 57;
        public const int SYSTEM_MSG058 = 58;
        public const int SYSTEM_MSG059 = 59;
        public const int SYSTEM_MSG060 = 60;
        #endregion /* エラーコード定数 */

        #region /* アドレス */
        public const int ADDR_FORMAT_CHECK = 0x0005;                /* フォーマットチェック開始アドレス */
        public const int FORMAT_CHECK_COUNT = 5;                    /* フォーマットチェックのアドレス数 */

        public const int ADDR_MACHINE_STATUS = 0x8000;              /* マシン状態アドレス */
        public const int ADDR_ERROR_STATUS = 0x8010;                /* エラー状態アドレス */

        public const int ADDR_MACHINE_REVISION = 0x800B;            /* マシンリビジョンアドレス */
        public const int MACHINE_REVISION_COUNT = 5;                /* マシンリビジョンアドレス数 */

        public const int MAX_RETRY_COUNT = 3;                       /* リトライ回数 */
        public const int SERIAL_READ_TIMEOUT = 3000;                /* シリアルポート読み込みタイムアウト（ミリ秒） */
        public const int SERIAL_WRITE_TIMEOUT = 3000;               /* シリアルポート書き込みタイムアウト（ミリ秒） */
        public const int SERIAL_ACK_TIMEOUT = 3000;                 /* ACK待ちタイムアウト（ミリ秒） */
        public const int SERIAL_POLLING_INTERVAL = 10000;           /* ポーリング間隔 */
        public const int INFOMATION_REDISPLAY_INTERVAL = 30000;     /* 情報ウインドウの再表示間隔 */

        // 通信の切断理由
        public const int COM_ERROR_NORMAL = 0;                      /* エラーなし */
        public const int COM_ERROR_RETRYERROR = 1;                  /* リトライエラー */
        #endregion /* アドレス */

        #region /* マシンステータスビット */
        public const int BIT_SEEK_ORIGIN = 0x0001;      /* 原点サーチビット */
        public const int BIT_STOP = 0x0002;             /* 停止中 */
        public const int BIT_RUN = 0x0004;              /* 運転中 */
        public const int BIT_ERROR = 0x0008;            /* エラービット */
        public const int BIT_LOT_COMPLETE = 0x0010;     /* ロット設定満了ビット */
        public const int BIT_SET_COMPLETE = 0x0020;     /* 設定本数満了ビット */
        public const int BIT_REQUEST_START = 0x0040;    /* スタートスイッチで原点復帰開始要求ビット */
        public const int BIT_SHORT_STRIP1 = 0x0080;     /* ストリップ１ショートモード */
        public const int BIT_SHORT_STRIP2 = 0x0100;     /* ストリップ２ショートモード */
        #endregion /* マシンステータスビット */
    }
}
