<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WORK_0101" xml:space="preserve">
    <value>切断長</value>
  </data>
  <data name="WORK_0105" xml:space="preserve">
    <value>先出し長さ1</value>
  </data>
  <data name="WORK_0106" xml:space="preserve">
    <value>先出し長さ2</value>
  </data>
  <data name="WORK_0201" xml:space="preserve">
    <value>ストリップ1</value>
  </data>
  <data name="WORK_0202" xml:space="preserve">
    <value>ハーフストリップ1</value>
  </data>
  <data name="WORK_0203" xml:space="preserve">
    <value>ストリップ深さ</value>
  </data>
  <data name="WORK_0204" xml:space="preserve">
    <value>ストリッププルバック</value>
  </data>
  <data name="WORK_0301" xml:space="preserve">
    <value>ストリップ2</value>
  </data>
  <data name="WORK_0302" xml:space="preserve">
    <value>ハーフストリップ2</value>
  </data>
  <data name="WORK_0303" xml:space="preserve">
    <value>ストリップ深さ</value>
  </data>
  <data name="WORK_0304" xml:space="preserve">
    <value>ストリッププルバック</value>
  </data>
  <data name="WORK_0401" xml:space="preserve">
    <value>圧着位置1</value>
  </data>
  <data name="WORK_0402" xml:space="preserve">
    <value>クリンプハイト1</value>
  </data>
  <data name="WORK_0403" xml:space="preserve">
    <value>沈み1補正時間</value>
  </data>
  <data name="WORK_0404" xml:space="preserve">
    <value>圧着安定時間1</value>
  </data>
  <data name="WORK_0405" xml:space="preserve">
    <value>PFM番号1</value>
  </data>
  <data name="WORK_0406" xml:space="preserve">
    <value>圧着1横位置補正</value>
  </data>
  <data name="WORK_0407" xml:space="preserve">
    <value>圧着1後退位置</value>
  </data>
  <data name="WORK_0501" xml:space="preserve">
    <value>圧着位置2</value>
  </data>
  <data name="WORK_0502" xml:space="preserve">
    <value>クリンプハイト2</value>
  </data>
  <data name="WORK_0503" xml:space="preserve">
    <value>沈み2補正時間</value>
  </data>
  <data name="WORK_0504" xml:space="preserve">
    <value>圧着安定時間2</value>
  </data>
  <data name="WORK_0505" xml:space="preserve">
    <value>PFM番号2</value>
  </data>
  <data name="WORK_0506" xml:space="preserve">
    <value>圧着2横位置補正</value>
  </data>
  <data name="WORK_0601" xml:space="preserve">
    <value>防水1挿入量</value>
  </data>
  <data name="WORK_0602" xml:space="preserve">
    <value>防水1戻り量</value>
  </data>
  <data name="WORK_0603" xml:space="preserve">
    <value>防水1挿入速度</value>
  </data>
  <data name="WORK_0604" xml:space="preserve">
    <value>防水1挿入加速度</value>
  </data>
  <data name="WORK_0605" xml:space="preserve">
    <value>防水1 F線ガイド</value>
  </data>
  <data name="WORK_0701" xml:space="preserve">
    <value>防水2挿入量</value>
  </data>
  <data name="WORK_0702" xml:space="preserve">
    <value>防水2戻り量</value>
  </data>
  <data name="WORK_0703" xml:space="preserve">
    <value>防水2挿入速度</value>
  </data>
  <data name="WORK_0704" xml:space="preserve">
    <value>防水2挿入加速度</value>
  </data>
  <data name="WORK_0705" xml:space="preserve">
    <value>防水2 F線ガイド</value>
  </data>
  <data name="WORK_0806" xml:space="preserve">
    <value>ロット設定数</value>
  </data>
  <data name="WORK_0807" xml:space="preserve">
    <value>QTY設定数</value>
  </data>
  <data name="WORK_0808" xml:space="preserve">
    <value>Tact1</value>
  </data>
  <data name="WORK_0809" xml:space="preserve">
    <value>Tack2</value>
  </data>
  <data name="WORK_080A" xml:space="preserve">
    <value>Tack3</value>
  </data>
  <data name="WORK_0901" xml:space="preserve">
    <value>自動復帰時間</value>
  </data>
  <data name="WORK_0902" xml:space="preserve">
    <value>サイクル係数</value>
  </data>
  <data name="WORK_0A01" xml:space="preserve">
    <value>フィード速度</value>
  </data>
  <data name="WORK_0A02" xml:space="preserve">
    <value>フィード加速時間</value>
  </data>
  <data name="WORK_0A03" xml:space="preserve">
    <value>切断長補正値</value>
  </data>
  <data name="WORK_0A04" xml:space="preserve">
    <value>フィード速度</value>
  </data>
  <data name="WORK_0A05" xml:space="preserve">
    <value>フィード加速時間</value>
  </data>
  <data name="WORK_0A06" xml:space="preserve">
    <value>切断長補正値</value>
  </data>
  <data name="WORK_0A07" xml:space="preserve">
    <value>フィード速度</value>
  </data>
  <data name="WORK_0A08" xml:space="preserve">
    <value>フィード加速時間</value>
  </data>
  <data name="WORK_0A09" xml:space="preserve">
    <value>切断長補正値</value>
  </data>
  <data name="WORK_0A0A" xml:space="preserve">
    <value>フィード切替閾値</value>
  </data>
  <data name="WORK_0A0B" xml:space="preserve">
    <value>フィード切替閾値</value>
  </data>
</root>